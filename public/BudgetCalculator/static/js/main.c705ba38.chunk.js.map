{"version":3,"sources":["components/Popup.tsx","db/index.ts","db/repositories/items.ts","components/List.tsx","components/Cart.tsx","App.tsx","index.tsx"],"names":["InitPopup","props","HandleChange","bind","event","target","value","test","this","setState","number","className","trigger","modal","close","onSubmit","budget","type","min","max","id","onChange","onClick","changeBudget","React","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","COLLECTION_NAME","all","a","db","collection","get","snapshot","data","docs","forEach","_data","push","List","addToCart","formatNumber","useState","items","setItems","item","_items","useEffect","fetchItems","itemsWithoutDuplicates","Array","from","Set","map","name","find","listItems","thisType","el","lowPrice","highPrice","sort","tabs","Tab","Container","defaultActiveKey","Row","Col","sm","Nav","variant","Item","Link","eventKey","Content","Pane","commaNumber","require","Cart","removeFromCart","cart","cartHighTotal","cartLowTotal","num","toFixed","cartItems","App","setBudget","overBudget","setOverBudget","underBudget","setUnderBudget","withinBudget","setWithinBudget","setCart","setLowTotal","setHighTotal","total","val","document","getElementById","valueAsNumber","console","log","element","includes","hardCopy","filter","cartItem","lowTotal","highTotal","i","length","currBudget","checkBudget","ReactDOM","render","StrictMode"],"mappings":"qUA6CeA,E,kDAlCd,WAAYC,GAAa,IAAD,8BACvB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBAFG,E,gDAKxB,SAAaC,IAGe,KAAvBA,EAAMC,OAAOC,OADN,aACyBC,KAAKH,EAAMC,OAAOC,SACrDE,KAAKC,SAAS,CAAEC,OAAQN,EAAMC,OAAOC,U,oBAGvC,WAAU,IAAD,OACR,OACC,sBAAKK,UAAU,cAAf,UACC,cAAC,IAAD,CAAOC,QAAS,wBAAQD,UAAU,0BAAlB,6BAAsEE,OAAK,EAA3F,SACE,SAACC,GAAD,OACA,qBAAKH,UAAU,cAAf,SACC,uBAAMI,SAAUD,EAAhB,UACC,sEAAyC,EAAKb,MAAMe,UACpD,uBACA,uBAAOL,UAAU,SAAjB,eACA,uBAAQM,KAAK,SAASC,IAAK,EAAGC,IAAK,IAAUC,GAAG,SAASC,SAAU,EAAKnB,eACxE,uBAAOe,KAAK,SAASX,MAAM,KAAKgB,QAAS,EAAKrB,MAAMsB,uBAKxD,uBAdD,IAcQ,8B,GA7BaC,IAAMC,W,+ECE9BC,IAASC,cATc,CACnBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,8CAIIR,UAASS,YCVlBC,EAAkB,QAWXC,EAAG,uCAAG,8BAAAC,EAAA,sEACKC,EAAGC,WAAWJ,GAAiBK,MADpC,cACZC,EADY,OAEZC,EAAmB,GAEzBD,EAASE,KAAKC,SAAQ,SAACC,GACtBH,EAAKI,KAAL,aACC3B,GAAI0B,EAAM1B,IACP0B,EAAMH,YAPO,kBAYXA,GAZW,2CAAH,qDCuGDK,EArGF,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,aAAwB,EACxBC,mBAAgB,IADQ,mBAC3CC,EAD2C,KACpCC,EADoC,iDAOlD,4BAAAf,EAAA,6DAECe,EAAS,IAFV,SAKsBC,IALtB,OAKOC,EALP,OAQCF,EAASE,GAGTH,EAAML,OAXP,4CAPkD,sBAGlDS,qBAAU,YAHwC,mCAIjDC,KACE,IAgBH,IAAMC,EAAyBC,MAAMC,KAAK,IAAIC,IAAIT,EAAMU,KAAI,SAACxB,GAAD,OAAOA,EAAEyB,UAAQD,KAAI,SAACC,GACjF,OAAOX,EAAMY,MAAK,SAAC1B,GAAD,OAAOA,EAAEyB,OAASA,QAI/BE,EAAY,SAACC,GAAD,OACjBR,EACEI,KAAI,SAACK,GAAD,OACJ,8BACEA,EAAGlD,OAASiD,GACZ,qBAAKvD,UAAU,YAAf,SACC,qBAAKA,UAAU,eAAf,SACC,qBAAKA,UAAU,8BAAf,SACC,qBAAKA,UAAU,sBAAf,SACC,sBAAKA,UAAU,aAAf,UACC,qBAAKA,UAAU,YAAf,SACC,uCAAQwD,EAAGJ,UAEZ,sBAAKpD,UAAU,UAAf,UACC,sBAAMA,UAAU,GAAhB,oBAAwBuC,EAAaiB,EAAGC,UAAxC,eAAwDlB,EACvDiB,EAAGE,cAEJ,uBAAOpD,KAAK,SAASX,MAAM,MAAMgB,QAAS,kBAAM2B,EAAUkB,qBAdxDA,EAAG/C,OAwBbkD,QAEGC,EACL,cAACC,EAAA,EAAIC,UAAL,CAAerD,GAAG,oBAAoBsD,iBAAiB,QAAvD,SACC,eAACC,EAAA,EAAD,WAEC,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACC,eAACC,EAAA,EAAD,CAAKC,QAAQ,QAAQpE,UAAU,cAA/B,UACC,cAACmE,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,QAAnB,6BAED,cAACJ,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,SAAnB,mCAED,cAACJ,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,QAAnB,4BAED,cAACJ,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,SAAnB,wBAED,cAACJ,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,QAAnB,0BAED,cAACJ,EAAA,EAAIE,KAAL,UACC,cAACF,EAAA,EAAIG,KAAL,CAAUC,SAAS,QAAnB,mCAIH,cAACN,EAAA,EAAD,CAAKC,GAAI,EAAT,SACC,eAACL,EAAA,EAAIW,QAAL,WACC,cAACX,EAAA,EAAIY,KAAL,CAAUF,SAAS,QAAnB,SAA4BjB,EAAU,mBACtC,cAACO,EAAA,EAAIY,KAAL,CAAUF,SAAS,SAAnB,SAA6BjB,EAAU,yBACvC,cAACO,EAAA,EAAIY,KAAL,CAAUF,SAAS,QAAnB,SAA4BjB,EAAU,kBACtC,cAACO,EAAA,EAAIY,KAAL,CAAUF,SAAS,SAAnB,SAA6BjB,EAAU,cACvC,cAACO,EAAA,EAAIY,KAAL,CAAUF,SAAS,QAAnB,SAA4BjB,EAAU,gBACtC,cAACO,EAAA,EAAIY,KAAL,CAAUF,SAAS,QAAnB,SAA4BjB,EAAU,8BAO3C,OACC,8BACC,8BAAMM,OC9GLc,EAAcC,EAAQ,IA+CXC,EA7CF,SAAC,GAA2E,IAAzEtC,EAAwE,EAAxEA,UAAWuC,EAA6D,EAA7DA,eAAgBC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,cAAeC,EAAwB,EAAxBA,aAEzDzC,EAAe,SAAC0C,GACrB,OAAOP,GAAaO,EAAM,KAAKC,QAAQ,KAGlCC,EAAYL,EAAK3B,KAAI,SAACK,GAAD,OAC1B,gCACC,uCAAQA,EAAGJ,QACX,2CACMb,EAAaiB,EAAGC,WADtB,iBAC0ClB,EAAaiB,EAAGE,eAE1D,uBAAOpD,KAAK,SAASX,MAAM,SAASgB,QAAS,kBAAMkE,EAAerB,MAClE,uBACA,yBAPSA,EAAG/C,OAWd,OACC,8BACC,qBAAKT,UAAU,wBAAf,SACC,sBAAKA,UAAU,MAAf,UACC,qBAAKA,UAAU,WAAf,SACC,cAAC,EAAD,CAAMsC,UAAWA,EAAWC,aAAcA,MAG3C,sBAAKvC,UAAU,WAAf,UACC,sCACA,gDACc,sBAAMS,GAAG,WAAT,SAAqB8B,EAAawC,QAEhD,+CACa,sBAAMtE,GAAG,WAAT,SAAqB8B,EAAayC,QAE/C,uBACA,uBACA,8BAAMG,IACN,kCCrCFT,EAAcC,EAAQ,IAuIXS,EA9HH,WAAO,IAAD,EACW5C,mBAAS,GADpB,mBACVnC,EADU,KACFgF,EADE,OAEmB7C,oBAAS,GAF5B,mBAEV8C,EAFU,KAEEC,EAFF,OAGqB/C,oBAAS,GAH9B,mBAGVgD,EAHU,KAGGC,EAHH,OAIuBjD,oBAAS,GAJhC,mBAIVkD,EAJU,KAIIC,EAJJ,OAKOnD,mBAAgB,IALvB,mBAKVsC,EALU,KAKJc,EALI,OAMmBpD,mBAAS,GAN5B,mBAMVwC,EANU,KAMIa,EANJ,OAOqBrD,mBAAS,GAP9B,mBAOVuC,EAPU,KAOKe,EAPL,KASjBjD,qBAAU,WAETkD,MACE,CAACjB,EAAME,EAAc3E,IA2ExB,OACC,gCACC,uBACA,oBAAIL,UAAU,cAAd,4CACA,qBAAIA,UAAU,yBAAd,8BAAyD0E,EAAYrE,MAHtE,IAGoF,uBAEnF,cAAC,EAAD,CAAWO,aAbQ,WACpB,IAAMoF,EAAOC,SAASC,eAAe,UAAgCC,cAEjEH,EAAM,GAAKA,EAAM,KACpBX,EAAUW,OAtCXI,QAAQC,IAAIb,GACG,IAAXnF,EAEF,oBAAIL,UAAU,wBAAd,yDAGEK,EAAS,GAAuB,IAAlB0E,EAEhB,oBAAI/E,UAAU,wBAAd,yCAGEwF,EAEF,oBAAIxF,UAAU,2BAAd,uCAGEsF,EAEF,oBAAItF,UAAU,0BAAd,sCAGE0F,EAEF,oBAAI1F,UAAU,wBAAd,6CAFF,GA4BC,uBAPD,IAUC,cAAC,EAAD,CACCsC,UA5De,SAACgE,GACbxB,EAAKyB,SAASD,IAClBV,EAAQ,GAAD,mBAAKd,GAAL,CAAWwB,MA2DjBzB,eA1BoB,SAACyB,GACvB,IAAIE,EAAQ,YAAO1B,GACnB0B,EAAWA,EAASC,QAAO,SAACC,GAAD,OAAcA,EAASjG,KAAO6F,EAAQ7F,MACjEmF,EAAQY,IAwBNT,MAAOA,EACPjB,KAAMA,EACNE,aAAcA,EACdD,cAAeA,OAKlB,SAASgB,IAKR,IAHA,IAAIY,EAAW,EACXC,EAAY,EAEPC,EAAI,EAAGA,EAAI/B,EAAKgC,OAAQD,IAChCF,GAAY7B,EAAK+B,GAAGpD,SACpBmD,GAAa9B,EAAK+B,GAAGnD,UAGtBmC,EAAYc,GACZb,EAAac,GA1GM,WACnB,IAAIG,EAAsB,IAAT1G,EAGb2E,EAAe+B,IAElBxB,GAAc,GACdI,GAAgB,GAChBF,GAAe,IAEZT,EAAe+B,GAAchC,EAAgBgC,IAEhDtB,GAAe,GACfF,GAAc,GACdI,GAAgB,IAEbX,EAAe+B,GAAchC,EAAgBgC,IAEhDpB,GAAgB,GAChBF,GAAe,GACfF,GAAc,IAuFfyB,KCnIFC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlB,SAASC,eAAe,W","file":"static/js/main.c705ba38.chunk.js","sourcesContent":["import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\n\r\nexport type IProps = {};\r\n\r\nexport interface IState {\r\n\tbudget: number;\r\n}\r\n\r\nclass InitPopup extends React.Component<any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.HandleChange = this.HandleChange.bind(this);\r\n\t}\r\n\r\n\tHandleChange(event: any) {\r\n\t\t//numbers only regex!\r\n\t\tconst re = /^[0-9\\b]+$/;\r\n\t\tif (event.target.value === '' || re.test(event.target.value)) {\r\n\t\t\tthis.setState({ number: event.target.value });\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"text-center\">\r\n\t\t\t\t<Popup trigger={<button className=\"btn btn-outline-primary\"> Change Budget </button>} modal>\r\n\t\t\t\t\t{(close: any) => (\r\n\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t<form onSubmit={close}>\r\n\t\t\t\t\t\t\t\t<span>How much would you like to spend? {this.props.budget}</span>\r\n\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t<label className=\"h1 p-1\">$</label>\r\n\t\t\t\t\t\t\t\t<input  type=\"number\" min={0} max={10000000} id=\"budget\" onChange={this.HandleChange} />\r\n\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"go\" onClick={this.props.changeBudget} />\r\n\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Popup>\r\n\t\t\t\t<br /> <br />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InitPopup;\r\n","import firebase from 'firebase';\r\nimport 'firebase/database'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD7NUVfrImccSo8FuCBG7bXVk0oLFqgE-k\",\r\n    authDomain: \"yardzen-demo.firebaseapp.com\",\r\n    databaseURL: \"https://yardzen-demo.firebaseio.com\",\r\n    projectId: \"yardzen-demo\",\r\n    storageBucket: \"yardzen-demo.appspot.com\",\r\n    messagingSenderId: \"509183652730\",\r\n    appId: \"1:509183652730:web:ba2208f7d8e0882f009cc3\"\r\n  }\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase.firestore();","// import db config\r\nimport db from '..';\r\n\r\n// collection name\r\nconst COLLECTION_NAME = 'items';\r\n\r\n// mapping the item document\r\nexport type Item = {\r\n\ttype: string;\r\n\tname: string;\r\n\tlowPrice: number;\r\n\thighPrice: number;\r\n};\r\n\r\n// retrieve all objects from firebase\r\nexport const all = async (): Promise<Array<Item>> => {\r\n\tconst snapshot = await db.collection(COLLECTION_NAME).get();\r\n\tconst data: Array<any> = [];\r\n\r\n\tsnapshot.docs.forEach((_data) => {\r\n\t\tdata.push({\r\n\t\t\tid: _data.id, // because id field in separate function in firestore\r\n\t\t\t..._data.data(), // the remaining fields\r\n\t\t});\r\n\t});\r\n\r\n\t// return and convert back it array of item\r\n\treturn data as Array<Item>;\r\n};\r\n\r\n// create an item\r\nexport const create = async (item: Item): Promise<Item> => {\r\n\tconst docRef = await db.collection(COLLECTION_NAME).add(item);\r\n\r\n\t// return new created item\r\n\treturn {\r\n\t\tid: docRef.id,\r\n\t\t...item,\r\n\t} as Item;\r\n};\r\n\r\n// update a item\r\nexport const update = async (id: string, item: Item): Promise<Item> => {\r\n\tawait db.collection(COLLECTION_NAME).doc(id).update(item);\r\n\r\n\t// return updated item\r\n\treturn {\r\n\t\tid: id,\r\n\t\t...item,\r\n\t} as Item;\r\n};\r\n\r\n// delete a item\r\nexport const remove = async (id: string) => {\r\n\tawait db.collection(COLLECTION_NAME).doc(id).delete();\r\n};","import React, { useState, useEffect } from 'react';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Nav from 'react-bootstrap/Nav';\n\nimport Col from 'react-bootstrap/Col';\nimport * as item from '../db/repositories/items';\n\nexport type IProps = {\n\taddToCart: any;\n};\n\nexport interface IState {\n\taddToCart: any;\n\tcartItems: any;\n}\n\nconst List = ({ addToCart, formatNumber }: any) => {\n\tconst [items, setItems] = useState<any[]>([]);\n\n\tuseEffect(() => {\n\t\tfetchItems();\n\t}, []);\n\n\tasync function fetchItems() {\n\t\t// clean the items array first\n\t\tsetItems([]);\n\n\t\t// fetch items from repository\n\t\tconst _items = await item.all();\n\n\t\t// set items to state\n\t\tsetItems(_items);\n\t\t// console.log(_items);\n\n\t\titems.push();\n\t};\n\n\tconst itemsWithoutDuplicates = Array.from(new Set(items.map((a) => a.name))).map((name) => {\n\t\treturn items.find((a) => a.name === name);\n\t});\n\n\t//list items list without duplicates, taking in the category as a parameter\n\tconst listItems = (thisType: string) =>\n\t\titemsWithoutDuplicates\n\t\t\t.map((el) => (\n\t\t\t\t<div key={el.id}>\n\t\t\t\t\t{el.type === thisType && ( // if the current element matches the category passed here\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<div className=\"row clearfix\">\n\t\t\t\t\t\t\t\t<div className=\"col-md-3 col-sm-6 col-xs-12\">\n\t\t\t\t\t\t\t\t\t<div className=\"boxs project_widget\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"pw_content\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"pw_header\">\n\t\t\t\t\t\t\t\t\t\t\t\t<h3>{`${el.name}`}</h3>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"pw_meta\">\n\t\t\t\t\t\t\t\t\t\t\t\t<span className=\"\">{`$${formatNumber(el.lowPrice)} - $${formatNumber(\n\t\t\t\t\t\t\t\t\t\t\t\t\tel.highPrice\n\t\t\t\t\t\t\t\t\t\t\t\t)}`}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"submit\" value=\"add\" onClick={() => addToCart(el)} />\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t))\n\t\t\t.sort();\n\n\tconst tabs = (\n\t\t<Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\n\t\t\t<Row>\n\t\t\t\t{/* Hardcoded the categories in :-( ...getting them in there automatically was an enormous headache. */}\n\t\t\t\t<Col sm={6}>\n\t\t\t\t\t<Nav variant=\"pills\" className=\"flex-column\">\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"first\">Deck Material</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"second\">Fencing and Privacy</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"third\">Ground Cover</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"fourth\">Lighting</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"fifth\">Structures</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"sixth\">Water Features</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Col>\n\t\t\t\t<Col sm={5}>\n\t\t\t\t\t<Tab.Content>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"first\">{listItems('DECK_MATERIAL')}</Tab.Pane>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"second\">{listItems('FENCING_AND_PRIVACY')}</Tab.Pane>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"third\">{listItems('GROUND_COVER')}</Tab.Pane>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"fourth\">{listItems('LIGHTING')}</Tab.Pane>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"fifth\">{listItems('STRUCTURES')}</Tab.Pane>\n\t\t\t\t\t\t<Tab.Pane eventKey=\"sixth\">{listItems('WATER_FEATURES')}</Tab.Pane>\n\t\t\t\t\t</Tab.Content>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Tab.Container>\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<div>{tabs}</div>\n\t\t</div>\n\t);\n};\nexport default List;\n","import React, { useState, useEffect } from 'react';\nimport List from './List';\nimport '../index.css';\n\nvar commaNumber = require('comma-number');\n\nconst Cart = ({ addToCart, removeFromCart, cart, cartHighTotal, cartLowTotal }: any) => {\n\t//turn 100 into 1.00 :-)\n\tconst formatNumber = (num: any) => {\n\t\treturn commaNumber((num / 100).toFixed(2));\n\t};\n\t//here is where each item is rendered\n\tconst cartItems = cart.map((el: any) => (\n\t\t<div key={el.id}>\n\t\t\t<h4>{`${el.name}`}</h4>\n\t\t\t<div>\n\t\t\t\t{`$${formatNumber(el.lowPrice)}`} - {`$${formatNumber(el.highPrice)}`}\n\t\t\t</div>\n\t\t\t<input type=\"submit\" value=\"remove\" onClick={() => removeFromCart(el)} />\n\t\t\t<br />\n\t\t\t<br />\n\t\t</div>\n\t));\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"container text-center\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-md-4\">\n\t\t\t\t\t\t<List addToCart={addToCart} formatNumber={formatNumber} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"col-md-8\">\n\t\t\t\t\t\t<h2>CART</h2>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tHigh Total: $<span id=\"hi-total\">{formatNumber(cartHighTotal)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\tLow Total: $<span id=\"lo-total\">{formatNumber(cartLowTotal)}</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<div>{cartItems}</div>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Cart;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport './bootstrap.min.css';\nimport InitPopup from './components/Popup';\nimport Cart from './components/Cart';\n\nvar commaNumber = require('comma-number');\n\nexport type IProps = {};\n\nexport interface IState {\n\tbudget: number;\n\titems: any[];\n}\n\nconst App = () => {\n\tconst [budget, setBudget] = useState(0);\n\tconst [overBudget, setOverBudget] = useState(false);\n\tconst [underBudget, setUnderBudget] = useState(false);\n\tconst [withinBudget, setWithinBudget] = useState(false);\n\tconst [cart, setCart] = useState<any[]>([]);\n\tconst [cartLowTotal, setLowTotal] = useState(0);\n\tconst [cartHighTotal, setHighTotal] = useState(0);\n\n\tuseEffect(() => {\n\t\t//update total whenever cart is changed\n\t\ttotal();\n\t}, [cart, cartLowTotal, budget]);//whenever these values are changed, the component will reload\n\n\tconst checkBudget = () => {\n\t\tlet currBudget = budget * 100; // times 100 to account for the decimal places\n\n\t\t//check to see if total is greater than current budget\n\t\tif (cartLowTotal > currBudget) {\n\t\t\t// over budget\n\t\t\tsetOverBudget(true);\n\t\t\tsetWithinBudget(false);\n\t\t\tsetUnderBudget(false);\n\t\t}\n\t\tif (cartLowTotal < currBudget && cartHighTotal < currBudget) {\n\t\t\t// under budget\n\t\t\tsetUnderBudget(true);\n\t\t\tsetOverBudget(false);\n\t\t\tsetWithinBudget(false);\n\t\t}\n\t\tif (cartLowTotal < currBudget && cartHighTotal > currBudget) {\n\t\t\t// within budget\n\t\t\tsetWithinBudget(true);\n\t\t\tsetUnderBudget(false);\n\t\t\tsetOverBudget(false);\n\t\t}\n\t};\n\n\n\tconst addToCart = (element: object) => {\n\t\tif (!cart.includes(element)) {//if item is not already inside cart, add it!\n\t\t\tsetCart([...cart, element]);\n\t\t}\n\t};\n\n\tconst budgetStatus = () => {\n\t\tconsole.log(underBudget);\n\t\tif (budget === 0) { //if there is no budget\n\t\t\treturn (\n\t\t\t\t<h3 className=\"text-center text-info\">enter a budget to get started. 😃</h3>\n\t\t\t)\n\t\t}\n\t\tif (budget > 0 && cartHighTotal === 0) { // after budget entered, no items in cart\n\t\t\treturn (\n\t\t\t\t<h3 className=\"text-center text-info\">Add some items 😃</h3>\n\t\t\t)\n\t\t}\n\t\tif (underBudget) {\n\t\t\treturn (\n\t\t\t\t<h3 className=\"text-center text-success\">you are under the budget!</h3>\n\t\t\t)\n\t\t}\n\t\tif (overBudget) {\n\t\t\treturn (\n\t\t\t\t<h3 className=\"text-center text-danger\">you are over the budget!</h3>\n\t\t\t)\n\t\t}\n\t\tif (withinBudget) {\n\t\t\treturn (\n\t\t\t\t<h3 className=\"text-center text-info\">you are within the budget!</h3>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst removeFromCart = (element: any) => {\n\t\tlet hardCopy = [...cart];\n\t\thardCopy = hardCopy.filter((cartItem) => cartItem.id !== element.id);\n\t\tsetCart(hardCopy);\n\t};\n\n\tconst updateBudget = () => {\n\t\tconst val = (document.getElementById('budget')! as HTMLInputElement).valueAsNumber;\n\n\t\tif (val > 0 && val < 10000000) //min and max values\n\t\t\tsetBudget(val);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<br />\n\t\t\t<h1 className=\"text-center\">Budget Calculator 💵</h1>\n\t\t\t<h3 className=\"text-center text-muted\">Current Budget: ${commaNumber(budget)}</h3> <br />\n\t\t\t{/* below lines are ugly, I know. InitPopup is the \"Change Budget\" button, I pass it the updateBudget function with some params */}\n\t\t\t<InitPopup changeBudget={updateBudget} />\n\t\t\t{budgetStatus()}\n\t\t\t<br /> {/* line break */}\n\t\t\t{/* here is the cart, that includes the category tabs as a child component. i pass it all the things it needs right here. */}\n\t\t\t{/* Why not have all these items in the Cart's state? because we need the current total to see if the budget is over or under! */}\n\t\t\t<Cart\n\t\t\t\taddToCart={addToCart}\n\t\t\t\tremoveFromCart={removeFromCart}\n\t\t\t\ttotal={total}\n\t\t\t\tcart={cart}\n\t\t\t\tcartLowTotal={cartLowTotal}\n\t\t\t\tcartHighTotal={cartHighTotal}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\tfunction total() {\n\t\t//calculate high and low total\n\t\tlet lowTotal = 0;\n\t\tlet highTotal = 0;\n\t\t//iterate over cart and add each high/low price to correct variables\n\t\tfor (let i = 0; i < cart.length; i++) {\n\t\t\tlowTotal += cart[i].lowPrice;\n\t\t\thighTotal += cart[i].highPrice;\n\t\t}\n\t\t//set state variables\n\t\tsetLowTotal(lowTotal);\n\t\tsetHighTotal(highTotal);\n\t\tcheckBudget();\n\t}\n\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}